/**
 * contains types and such used exclusively by the Edge Assembly Crossover part of the algorithm
 */
#ifndef EAX_H // header guard
#define EAX_H

#include "tsp.h"

#define MAX_SUB_TOURS 10  // maximum number of sub-tours in an intermediate tour
#define MAX_EDGES 4       // there can only be 4 maximum edges, two from each parent tour

/**
 * a node in a graph
 */
typedef struct {
	node_t* edge[MAX_EDGES]; // neighbor nodes of this node
	int size; // number of edges in this node
} node_t;

/**
 * used when combining two tours to create a graph consisting of the
 * edges in both tourA and tourB
 */
typedef struct {
	node_t* node[MAX_CITIES]; // each node is a city, so the maximum number of nodes and cities is equal
	int size; // number of nodes in this graph
} graph_t;

/**
 * represents an intermediate tour in the eax algorithm.
 * this tour is generated by applying an E-set to Tour_A
 */
typedef struct {
	tour_t* subTour[MAX_SUB_TOURS]; // the subtours contained in this intermediate (iteratively combined in the algorithm)
	int size; // number of sub tours currently in the intermediate
} intermediate_t;

#endif // header guard